include './base'
include './f64'
include './cbqnDefs'
include './sse3'
include './avx'
include './avx2'
include './bitops'
include './mask'

def bitsel{VL, T, r, bits, e0, e1, len} = {
  def bulk = VL/width{T}
  def VT = [bulk]T
  
  e0v:= broadcast{VT, e0}
  e1v:= broadcast{VT, e1}
  
  maskedLoop{bulk, len, {i, M} => {
    cb:= loadBatchBit{VT, bits, i}
    storeBatch{r, i, blendF{e0v, e1v, cb}, M}
  }}
}

bitsel_i{VL,T}(r:*void, bits:*u64, e0:u64, e1:u64, len:u64) : void = {
  bitsel{VL, T, *T~~r, bits, trunc{T,e0}, trunc{T,e1}, len}
}

'avx2_bitsel_8' =bitsel_i{256, u8}
'avx2_bitsel_16'=bitsel_i{256, u16}
'avx2_bitsel_32'=bitsel_i{256, u32}
'avx2_bitsel_64'=bitsel_i{256, u64}